{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MateBook\\\\Desktop\\\\look-for-image\\\\src\\\\firstPage.js\",\n    _s = $RefreshSig$();\n\nimport backgroundImage from \"./icons/john-towner-JgOeRuGD_Y4-unsplash.jpg\";\nimport lupe from './icons/loupe.png';\nimport cross from \"./icons/letter-x.png\";\nimport React, { useEffect } from \"react\"; // const subscriptionKey = '6e79fffeadc34859b3ac41065bfda7dc';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tomTomApiKey = \"MmTYW8cbCvlP0Ldmo9cUDGwEyyqEUq0G\"; // export default class FirstPage extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       descriptions: [],\n//       hints: []\n//     }\n//     // this.fetchAPI = this.fetchAPI.bind(this);\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//     this.clearInput = this.clearInput.bind(this);\n//   }\n//   componentDidMount(){  \n//     const inp = document.getElementById(\"contentDiv__form__input\")\n//     let eventSource = null;\n//     let value = '';\n//     // fetch on hints list click\n//     inp.addEventListener('keydown', (e) => {\n//       eventSource = e.key ? 'input' : 'list';\n//     });\n//     inp.addEventListener('input', (e) => {\n//       value = e.target.value;\n//       if (eventSource === 'list') {\n//         this.props.setMainInput(value)\n//         this.props.changePage();\n//       }\n//     });\n//   }\n//   async handleChange(event){\n//     await this.props.setMainInput(event.target.value.toLowerCase())\n//     if(event.target.value.length > 2){\n//       this.props.fetchAPIHints()\n//     } else {\n//       this.props.setHints([])\n//     }\n//   }\n//   handleSubmit(event){\n//     event.preventDefault()\n//     this.props.changePage()\n//   }\n//   clearInput(){ \n//     const inp = document.querySelector(\".contentDiv__form__input\")\n//     if(inp.value === \"\"){\n//       return;\n//     }\n//     this.props.setMainInput(\"\")\n//     inp.value = \"\"\n//     this.props.setHints([])\n//   }\n//   render(){\n//   return(\n//       <div className=\"firstPageMainDiv\" id=\"firstPageMainDiv\">\n//         <img className=\"backGroundImg\" alt=\"landscape\" src={backgroundImage} />\n//         <div className=\"contentDiv\" id=\"contentDiv\">\n//           <h1 className=\"contentDiv__h1\">Look For An Image</h1>\n//           <p className=\"contentDiv__firstSubtitle\">Usplash API powered pictures browser.</p>\n//           <form onSubmit={this.handleSubmit} className=\"contentDiv__form\">\n//             <button onClick={this.handleSubmit} title=\"Search for pictures\" type=\"button\" id=\"contentDiv__form__lupeBtn\"  className=\"contentDiv__form__lupeBtn\" ><img className=\"lupeIcon\" alt=\"lupe_icon\" src={lupe} /></button>\n//             <input list=\"autocomplite\" autoComplete=\"off\" required onChange={this.handleChange} id=\"contentDiv__form__input\" className=\"contentDiv__form__input\" type=\"search\" placeholder=\"Search for high-resolution photos\" />\n//             <datalist onClick={this.handleSubmit} id=\"autocomplite\">\n//               {this.props.hints.map(elem => {\n//                 return <option key={elem} value={elem}>{elem}</option>\n//               }) }\n//             </datalist>\n//             <button title=\"Clear form\" type=\"button\" onClick={this.clearInput} id=\"contentDiv__form__clearBtn\" className=\"contentDiv__form__clearBtn\"><img className=\"crossIcon\" alt=\"cross_icon\" src={cross} /></button>\n//           </form>\n//           <p style={{color: \"red\"}}>{this.props.hints[0] === \"No hints for choosen query\" ? \" -- \" + this.props.hints[0] : null}</p>\n//           <p className=\"contentDiv__trending\">There are available only 50 API requests per hour so this can expire quickly.</p>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\nexport default function FirstPage(props) {\n  _s();\n\n  useEffect(() => {\n    const inp = document.getElementById(\"contentDiv__form__input\");\n    let eventSource = null;\n    let value = ''; // fetch on hints list click\n\n    inp.addEventListener('keydown', e => {\n      eventSource = e.key ? 'input' : 'list';\n    });\n    inp.addEventListener('input', e => {\n      value = e.target.value;\n\n      if (eventSource === 'list') {\n        this.props.setMainInput(value);\n        this.props.changePage();\n      }\n    });\n  });\n\n  async function handleChange(event) {\n    await this.props.setMainInput(event.target.value.toLowerCase());\n\n    if (event.target.value.length > 2) {\n      this.props.fetchAPIHints();\n    } else {\n      this.props.setHints([]);\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    this.props.changePage();\n  }\n\n  function clearInput() {\n    const inp = document.querySelector(\".contentDiv__form__input\");\n\n    if (inp.value === \"\") {\n      return;\n    }\n\n    this.props.setMainInput(\"\");\n    inp.value = \"\";\n    this.props.setHints([]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"firstPageMainDiv\",\n    id: \"firstPageMainDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"backGroundImg\",\n      alt: \"landscape\",\n      src: backgroundImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentDiv\",\n      id: \"contentDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"contentDiv__h1\",\n        children: \"Look For An Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"contentDiv__firstSubtitle\",\n        children: \"Usplash API powered pictures browser.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"contentDiv__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleSubmit,\n          title: \"Search for pictures\",\n          type: \"button\",\n          id: \"contentDiv__form__lupeBtn\",\n          className: \"contentDiv__form__lupeBtn\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"lupeIcon\",\n            alt: \"lupe_icon\",\n            src: lupe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 162\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          list: \"autocomplite\",\n          autoComplete: \"off\",\n          required: true,\n          onChange: this.handleChange,\n          id: \"contentDiv__form__input\",\n          className: \"contentDiv__form__input\",\n          type: \"search\",\n          placeholder: \"Search for high-resolution photos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          onClick: this.handleSubmit,\n          id: \"autocomplite\",\n          children: this.props.hints.map(elem => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: elem,\n              children: elem\n            }, elem, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          title: \"Clear form\",\n          type: \"button\",\n          onClick: this.clearInput,\n          id: \"contentDiv__form__clearBtn\",\n          className: \"contentDiv__form__clearBtn\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"crossIcon\",\n            alt: \"cross_icon\",\n            src: cross\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 151\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: this.props.hints[0] === \"No hints for choosen query\" ? \" -- \" + this.props.hints[0] : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"contentDiv__trending\",\n        children: \"There are available only 50 API requests per hour so this can expire quickly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FirstPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = FirstPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirstPage\");","map":{"version":3,"sources":["C:/Users/MateBook/Desktop/look-for-image/src/firstPage.js"],"names":["backgroundImage","lupe","cross","React","useEffect","tomTomApiKey","FirstPage","props","inp","document","getElementById","eventSource","value","addEventListener","e","key","target","setMainInput","changePage","handleChange","event","toLowerCase","length","fetchAPIHints","setHints","handleSubmit","preventDefault","clearInput","querySelector","hints","map","elem","color"],"mappings":"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","sourcesContent":["import backgroundImage from \"./icons/john-towner-JgOeRuGD_Y4-unsplash.jpg\";\r\nimport lupe from './icons/loupe.png';\r\nimport cross from \"./icons/letter-x.png\";\r\nimport React, { useEffect } from \"react\";\r\n\r\n\r\n// const subscriptionKey = '6e79fffeadc34859b3ac41065bfda7dc';\r\nconst tomTomApiKey = \"MmTYW8cbCvlP0Ldmo9cUDGwEyyqEUq0G\"\r\n\r\n// export default class FirstPage extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       descriptions: [],\r\n//       hints: []\r\n//     }\r\n//     // this.fetchAPI = this.fetchAPI.bind(this);\r\n//     this.handleChange = this.handleChange.bind(this);\r\n//     this.handleSubmit = this.handleSubmit.bind(this);\r\n//     this.clearInput = this.clearInput.bind(this);\r\n\r\n//   }\r\n//   componentDidMount(){  \r\n\r\n//     const inp = document.getElementById(\"contentDiv__form__input\")\r\n//     let eventSource = null;\r\n//     let value = '';\r\n\r\n//     // fetch on hints list click\r\n//     inp.addEventListener('keydown', (e) => {\r\n//       eventSource = e.key ? 'input' : 'list';\r\n//     });\r\n//     inp.addEventListener('input', (e) => {\r\n//       value = e.target.value;\r\n//       if (eventSource === 'list') {\r\n//         this.props.setMainInput(value)\r\n//         this.props.changePage();\r\n//       }\r\n//     });\r\n//   }\r\n//   async handleChange(event){\r\n//     await this.props.setMainInput(event.target.value.toLowerCase())\r\n\r\n//     if(event.target.value.length > 2){\r\n//       this.props.fetchAPIHints()\r\n//     } else {\r\n//       this.props.setHints([])\r\n//     }\r\n\r\n//   }\r\n//   handleSubmit(event){\r\n//     event.preventDefault()\r\n//     this.props.changePage()\r\n//   }\r\n//   clearInput(){ \r\n//     const inp = document.querySelector(\".contentDiv__form__input\")\r\n//     if(inp.value === \"\"){\r\n//       return;\r\n//     }\r\n//     this.props.setMainInput(\"\")\r\n//     inp.value = \"\"\r\n//     this.props.setHints([])\r\n//   }\r\n//   render(){\r\n//   return(\r\n//       <div className=\"firstPageMainDiv\" id=\"firstPageMainDiv\">\r\n//         <img className=\"backGroundImg\" alt=\"landscape\" src={backgroundImage} />\r\n//         <div className=\"contentDiv\" id=\"contentDiv\">\r\n//           <h1 className=\"contentDiv__h1\">Look For An Image</h1>\r\n//           <p className=\"contentDiv__firstSubtitle\">Usplash API powered pictures browser.</p>\r\n//           <form onSubmit={this.handleSubmit} className=\"contentDiv__form\">\r\n//             <button onClick={this.handleSubmit} title=\"Search for pictures\" type=\"button\" id=\"contentDiv__form__lupeBtn\"  className=\"contentDiv__form__lupeBtn\" ><img className=\"lupeIcon\" alt=\"lupe_icon\" src={lupe} /></button>\r\n//             <input list=\"autocomplite\" autoComplete=\"off\" required onChange={this.handleChange} id=\"contentDiv__form__input\" className=\"contentDiv__form__input\" type=\"search\" placeholder=\"Search for high-resolution photos\" />\r\n//             <datalist onClick={this.handleSubmit} id=\"autocomplite\">\r\n//               {this.props.hints.map(elem => {\r\n//                 return <option key={elem} value={elem}>{elem}</option>\r\n//               }) }\r\n//             </datalist>\r\n//             <button title=\"Clear form\" type=\"button\" onClick={this.clearInput} id=\"contentDiv__form__clearBtn\" className=\"contentDiv__form__clearBtn\"><img className=\"crossIcon\" alt=\"cross_icon\" src={cross} /></button>\r\n//           </form>\r\n//           <p style={{color: \"red\"}}>{this.props.hints[0] === \"No hints for choosen query\" ? \" -- \" + this.props.hints[0] : null}</p>\r\n//           <p className=\"contentDiv__trending\">There are available only 50 API requests per hour so this can expire quickly.</p>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nexport default function FirstPage(props){\r\n\r\n  useEffect(() => {\r\n    const inp = document.getElementById(\"contentDiv__form__input\")\r\n    let eventSource = null;\r\n    let value = '';\r\n\r\n    // fetch on hints list click\r\n    inp.addEventListener('keydown', (e) => {\r\n      eventSource = e.key ? 'input' : 'list';\r\n    });\r\n    inp.addEventListener('input', (e) => {\r\n      value = e.target.value;\r\n      if (eventSource === 'list') {\r\n        this.props.setMainInput(value)\r\n        this.props.changePage();\r\n      }\r\n    });\r\n  })\r\n  async function handleChange(event){\r\n    await this.props.setMainInput(event.target.value.toLowerCase())\r\n\r\n    if(event.target.value.length > 2){\r\n      this.props.fetchAPIHints()\r\n    } else {\r\n      this.props.setHints([])\r\n    }\r\n\r\n  }\r\n  function handleSubmit(event){\r\n    event.preventDefault()\r\n    this.props.changePage()\r\n  }\r\n  function clearInput(){ \r\n    const inp = document.querySelector(\".contentDiv__form__input\")\r\n    if(inp.value === \"\"){\r\n      return;\r\n    }\r\n    this.props.setMainInput(\"\")\r\n    inp.value = \"\"\r\n    this.props.setHints([])\r\n  }\r\n  return(\r\n      <div className=\"firstPageMainDiv\" id=\"firstPageMainDiv\">\r\n        <img className=\"backGroundImg\" alt=\"landscape\" src={backgroundImage} />\r\n        <div className=\"contentDiv\" id=\"contentDiv\">\r\n          <h1 className=\"contentDiv__h1\">Look For An Image</h1>\r\n          <p className=\"contentDiv__firstSubtitle\">Usplash API powered pictures browser.</p>\r\n          <form onSubmit={this.handleSubmit} className=\"contentDiv__form\">\r\n            <button onClick={this.handleSubmit} title=\"Search for pictures\" type=\"button\" id=\"contentDiv__form__lupeBtn\"  className=\"contentDiv__form__lupeBtn\" ><img className=\"lupeIcon\" alt=\"lupe_icon\" src={lupe} /></button>\r\n            <input list=\"autocomplite\" autoComplete=\"off\" required onChange={this.handleChange} id=\"contentDiv__form__input\" className=\"contentDiv__form__input\" type=\"search\" placeholder=\"Search for high-resolution photos\" />\r\n            <datalist onClick={this.handleSubmit} id=\"autocomplite\">\r\n              {this.props.hints.map(elem => {\r\n                return <option key={elem} value={elem}>{elem}</option>\r\n              }) }\r\n            </datalist>\r\n            <button title=\"Clear form\" type=\"button\" onClick={this.clearInput} id=\"contentDiv__form__clearBtn\" className=\"contentDiv__form__clearBtn\"><img className=\"crossIcon\" alt=\"cross_icon\" src={cross} /></button>\r\n          </form>\r\n          <p style={{color: \"red\"}}>{this.props.hints[0] === \"No hints for choosen query\" ? \" -- \" + this.props.hints[0] : null}</p>\r\n          <p className=\"contentDiv__trending\">There are available only 50 API requests per hour so this can expire quickly.</p>\r\n        </div>\r\n      </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}