{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MateBook\\\\Desktop\\\\look-for-image\\\\src\\\\firstPage.js\";\nimport backgroundImage from \"./icons/john-towner-JgOeRuGD_Y4-unsplash.jpg\";\nimport lupe from './icons/loupe.png';\nimport cross from \"./icons/letter-x.png\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst subscriptionKey = '6e79fffeadc34859b3ac41065bfda7dc';\nconst APIAccessKey = \"6PMB_sssC924TiZ3jPaY4Iwo4KZ0E6d6xZ0dgSbK4_g\";\nexport default class FirstPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      descriptions: [],\n      hints: []\n    };\n    this.fetchAPI = this.fetchAPI.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearInput = this.clearInput.bind(this);\n  }\n\n  fetchAPI(page) {\n    const regex = new RegExp(`${this.props.mainInput}`); // fetch(\"https://api.unsplash.com/search/photos/?\"\n    //   + \"&client_id=\" + APIAccessKey\n    //   + \"&query=mountains\"\n    //   + \"&per_page=30\"\n    //   + \"&page=\" + page\n    //   )\n    // .then(response => response.json())\n    // .then(data => console.log(data.results))\n    // .then((data, fetchedDesriptions) => fetchedDesriptions = data.results.map(elem => [elem.alt_description !== null ? elem.alt_description : \"puste\", elem.id]))\n    // .then((data) => this.setState({descriptions: data}))\n    // // .then((foundHints) => foundHints = this.state.descriptions.map(elem => elem[0].match(regex)))\n    // // .then(foundHints => this.setState({hints: foundHints}))\n    // .then(data => this.setState({hints: this.state.descriptions.map(elem => elem[0].match(regex))}))\n\n    fetch(\"https://api.bing.microsoft.com/\" + \"v7.0/Suggestions?\" + \"&mkt=en-US\" + \"&setLang=en-US\" + \"&q=\" + this.props.mainInput, {\n      headers: {\n        'Ocp-Apim-Subscription-Key': subscriptionKey\n      }\n    }).then(response => response.json()).then((data, fetchedDesriptions) => fetchedDesriptions = data.suggestionGroups[0].searchSuggestions.map(elem => elem.displayText)).then(data => this.setState({\n      descriptions: data\n    })).catch(err => console.log(err));\n  }\n\n  componentDidMount() {// this.fetchAPI(1)\n    // console.log(this.state.descriptions)\n    // data.suggestionGroups[0].searchSuggestions.map(elem => elem.displayText)\n  }\n\n  async handleChange(event) {\n    await this.props.setMainInput(event.target.value);\n\n    if (event.target.value.length > 2) {\n      this.fetchAPI();\n      console.log(\"fetched\");\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.changePage();\n  }\n\n  clearInput() {\n    const inp = document.querySelector(\".contentDiv__form__input\");\n\n    if (inp.value === \"\") {\n      return;\n    }\n\n    this.props.setMainInput(\"\");\n    inp.value = \"\";\n    console.log(this.state.descriptions);\n    console.log(this.state.hints);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"firstPageMainDiv\",\n      id: \"firstPageMainDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"backGroundImg\",\n        alt: \"landscape\",\n        src: backgroundImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentDiv\",\n        id: \"contentDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"contentDiv__h1\",\n          children: \"Look For An Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"contentDiv__firstSubtitle\",\n          children: \"Usplash API powered pictures browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"contentDiv__form\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleSubmit,\n            title: \"Search for pictures\",\n            type: \"button\",\n            id: \"contentDiv__form__lupeBtn\",\n            className: \"contentDiv__form__lupeBtn\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"lupeIcon\",\n              alt: \"lupe_icon\",\n              src: lupe\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 162\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"autocomplite\",\n            autoComplete: \"off\",\n            required: true,\n            onChange: this.handleChange,\n            id: \"contentDiv__form__input\",\n            className: \"contentDiv__form__input\",\n            type: \"search\",\n            placeholder: \"Search for high-resolution photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"autocomplite\",\n            children: this.state.descriptions.length > 0 ? this.state.descriptions.map(elem => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                onClick: this.handleSubmit,\n                value: elem,\n                children: elem\n              }, elem, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 24\n              }, this);\n            }) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Clear form\",\n            type: \"button\",\n            onClick: this.clearInput,\n            id: \"contentDiv__form__clearBtn\",\n            className: \"contentDiv__form__clearBtn\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"crossIcon\",\n              alt: \"cross_icon\",\n              src: cross\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 151\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"contentDiv__trending\",\n          children: \"There are available only 50 API requests per hour so this can expire quickly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n} // export default function FirstPage (props) {\n//   const [hints, setHints] = useState([])\n//   function fetchAPI(page){\n//     fetch(\"https://api.bing.microsoft.com/\"\n//     + \"v7.0/Suggestions?\"\n//     + \"&mkt=en-US\"\n//     + \"&setLang=en-US\"\n//     + \"&q=\" + props.mainInput, {\n//       headers: {\n//         'Ocp-Apim-Subscription-Key' : subscriptionKey,\n//       }\n//     })\n//     .then(response => response.json())\n//     .then((data, fetchedDesriptions) => fetchedDesriptions = data.suggestionGroups[0].searchSuggestions.map(elem => elem.displayText))\n//     .then((data) => setHints(data))\n//     .catch(err => console.log(err))\n//   }\n//   async function handleChange(event){\n//     await props.setMainInput(event.target.value)\n//     if(event.target.value.length > 2){\n//       fetchAPI()\n//       console.log(\"fetched\")\n//     } else {\n//       setHints([])\n//     }\n//   }\n//   function handleSubmit(event){\n//     event.preventDefault()\n//     props.changePage()\n//   }\n//   function clearInput(){ \n//     const inp = document.querySelector(\".contentDiv__form__input\")\n//     if(inp.value === \"\"){\n//       return;\n//     }\n//     props.setMainInput(\"\")\n//     inp.value = \"\"\n//     console.log(hints)\n//   }\n//   return(\n//       <div className=\"firstPageMainDiv\" id=\"firstPageMainDiv\">\n//         <img className=\"backGroundImg\" alt=\"landscape\" src={backgroundImage} />\n//         <div className=\"contentDiv\" id=\"contentDiv\">\n//           <h1 className=\"contentDiv__h1\">Look For An Image</h1>\n//           <p className=\"contentDiv__firstSubtitle\">Usplash API powered pictures browser.</p>\n//           <form onSubmit={handleSubmit} className=\"contentDiv__form\">\n//             <button onClick={handleSubmit} title=\"Search for pictures\" type=\"button\" id=\"contentDiv__form__lupeBtn\"  className=\"contentDiv__form__lupeBtn\" ><img className=\"lupeIcon\" alt=\"lupe_icon\" src={lupe} /></button>\n//             <input list=\"autocomplite\" autoComplete=\"off\" required onChange={handleChange} id=\"contentDiv__form__input\" className=\"contentDiv__form__input\" type=\"search\" placeholder=\"Search for high-resolution photos\" />\n//             <datalist id=\"autocomplite\">\n//               {hints.length > 0 ? hints.map(elem => {\n//                 return <option onClick={handleSubmit} key={elem} value={elem}>{elem}</option>\n//               }) : null}\n//             </datalist>\n//             <button title=\"Clear form\" type=\"button\" onClick={clearInput} id=\"contentDiv__form__clearBtn\" className=\"contentDiv__form__clearBtn\"><img className=\"crossIcon\" alt=\"cross_icon\" src={cross} /></button>\n//           </form>\n//           <p className=\"contentDiv__trending\">There are available only 50 API requests per hour so this can expire quickly.</p>\n//         </div>\n//       </div>\n//     )\n// }","map":{"version":3,"sources":["C:/Users/MateBook/Desktop/look-for-image/src/firstPage.js"],"names":["backgroundImage","lupe","cross","React","useEffect","useState","subscriptionKey","APIAccessKey","FirstPage","Component","constructor","props","state","descriptions","hints","fetchAPI","bind","handleChange","handleSubmit","clearInput","page","regex","RegExp","mainInput","fetch","headers","then","response","json","data","fetchedDesriptions","suggestionGroups","searchSuggestions","map","elem","displayText","setState","catch","err","console","log","componentDidMount","event","setMainInput","target","value","length","preventDefault","changePage","inp","document","querySelector","render"],"mappings":"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","sourcesContent":["import backgroundImage from \"./icons/john-towner-JgOeRuGD_Y4-unsplash.jpg\";\r\nimport lupe from './icons/loupe.png';\r\nimport cross from \"./icons/letter-x.png\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst subscriptionKey = '6e79fffeadc34859b3ac41065bfda7dc';\r\nconst APIAccessKey = \"6PMB_sssC924TiZ3jPaY4Iwo4KZ0E6d6xZ0dgSbK4_g\";\r\n\r\n\r\nexport default class FirstPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      descriptions: [],\r\n      hints: []\r\n    }\r\n    this.fetchAPI = this.fetchAPI.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.clearInput = this.clearInput.bind(this);\r\n\r\n  }\r\n  fetchAPI(page){\r\n\r\n    const regex = new RegExp(`${this.props.mainInput}`)\r\n\r\n    // fetch(\"https://api.unsplash.com/search/photos/?\"\r\n    //   + \"&client_id=\" + APIAccessKey\r\n    //   + \"&query=mountains\"\r\n    //   + \"&per_page=30\"\r\n    //   + \"&page=\" + page\r\n    //   )\r\n    // .then(response => response.json())\r\n    // .then(data => console.log(data.results))\r\n    // .then((data, fetchedDesriptions) => fetchedDesriptions = data.results.map(elem => [elem.alt_description !== null ? elem.alt_description : \"puste\", elem.id]))\r\n    // .then((data) => this.setState({descriptions: data}))\r\n    // // .then((foundHints) => foundHints = this.state.descriptions.map(elem => elem[0].match(regex)))\r\n    // // .then(foundHints => this.setState({hints: foundHints}))\r\n    // .then(data => this.setState({hints: this.state.descriptions.map(elem => elem[0].match(regex))}))\r\n\r\n    fetch(\"https://api.bing.microsoft.com/\"\r\n    + \"v7.0/Suggestions?\"\r\n    + \"&mkt=en-US\"\r\n    + \"&setLang=en-US\"\r\n    + \"&q=\" + this.props.mainInput, {\r\n      headers: {\r\n        'Ocp-Apim-Subscription-Key' : subscriptionKey,\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then((data, fetchedDesriptions) => fetchedDesriptions = data.suggestionGroups[0].searchSuggestions.map(elem => elem.displayText))\r\n    .then((data) => this.setState({descriptions: data}))\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  componentDidMount(){\r\n    // this.fetchAPI(1)\r\n    // console.log(this.state.descriptions)\r\n    // data.suggestionGroups[0].searchSuggestions.map(elem => elem.displayText)\r\n  }  \r\n  async handleChange(event){\r\n    await this.props.setMainInput(event.target.value)\r\n\r\n    if(event.target.value.length > 2){\r\n      this.fetchAPI()\r\n      console.log(\"fetched\")\r\n    }\r\n\r\n  }\r\n  handleSubmit(event){\r\n    event.preventDefault()\r\n    this.props.changePage()\r\n  }\r\n  clearInput(){ \r\n    const inp = document.querySelector(\".contentDiv__form__input\")\r\n    if(inp.value === \"\"){\r\n      return;\r\n    }\r\n    this.props.setMainInput(\"\")\r\n    inp.value = \"\"\r\n    console.log(this.state.descriptions)\r\n    console.log(this.state.hints)\r\n  }\r\n  render(){\r\n  return(\r\n      <div className=\"firstPageMainDiv\" id=\"firstPageMainDiv\">\r\n        <img className=\"backGroundImg\" alt=\"landscape\" src={backgroundImage} />\r\n        <div className=\"contentDiv\" id=\"contentDiv\">\r\n          <h1 className=\"contentDiv__h1\">Look For An Image</h1>\r\n          <p className=\"contentDiv__firstSubtitle\">Usplash API powered pictures browser.</p>\r\n          <form onSubmit={this.handleSubmit} className=\"contentDiv__form\">\r\n            <button onClick={this.handleSubmit} title=\"Search for pictures\" type=\"button\" id=\"contentDiv__form__lupeBtn\"  className=\"contentDiv__form__lupeBtn\" ><img className=\"lupeIcon\" alt=\"lupe_icon\" src={lupe} /></button>\r\n            <input list=\"autocomplite\" autoComplete=\"off\" required onChange={this.handleChange} id=\"contentDiv__form__input\" className=\"contentDiv__form__input\" type=\"search\" placeholder=\"Search for high-resolution photos\" />\r\n            <datalist id=\"autocomplite\">\r\n              {this.state.descriptions.length > 0 ? this.state.descriptions.map(elem => {\r\n                return <option onClick={this.handleSubmit} key={elem} value={elem}>{elem}</option>\r\n              }) : null}\r\n            </datalist>\r\n            <button title=\"Clear form\" type=\"button\" onClick={this.clearInput} id=\"contentDiv__form__clearBtn\" className=\"contentDiv__form__clearBtn\"><img className=\"crossIcon\" alt=\"cross_icon\" src={cross} /></button>\r\n          </form>\r\n          <p className=\"contentDiv__trending\">There are available only 50 API requests per hour so this can expire quickly.</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// export default function FirstPage (props) {\r\n//   const [hints, setHints] = useState([])\r\n\r\n//   function fetchAPI(page){\r\n\r\n//     fetch(\"https://api.bing.microsoft.com/\"\r\n//     + \"v7.0/Suggestions?\"\r\n//     + \"&mkt=en-US\"\r\n//     + \"&setLang=en-US\"\r\n//     + \"&q=\" + props.mainInput, {\r\n//       headers: {\r\n//         'Ocp-Apim-Subscription-Key' : subscriptionKey,\r\n//       }\r\n//     })\r\n//     .then(response => response.json())\r\n//     .then((data, fetchedDesriptions) => fetchedDesriptions = data.suggestionGroups[0].searchSuggestions.map(elem => elem.displayText))\r\n//     .then((data) => setHints(data))\r\n//     .catch(err => console.log(err))\r\n//   }\r\n//   async function handleChange(event){\r\n//     await props.setMainInput(event.target.value)\r\n\r\n//     if(event.target.value.length > 2){\r\n//       fetchAPI()\r\n//       console.log(\"fetched\")\r\n//     } else {\r\n//       setHints([])\r\n//     }\r\n\r\n//   }\r\n//   function handleSubmit(event){\r\n//     event.preventDefault()\r\n//     props.changePage()\r\n//   }\r\n//   function clearInput(){ \r\n//     const inp = document.querySelector(\".contentDiv__form__input\")\r\n//     if(inp.value === \"\"){\r\n//       return;\r\n//     }\r\n//     props.setMainInput(\"\")\r\n//     inp.value = \"\"\r\n//     console.log(hints)\r\n//   }\r\n//   return(\r\n//       <div className=\"firstPageMainDiv\" id=\"firstPageMainDiv\">\r\n//         <img className=\"backGroundImg\" alt=\"landscape\" src={backgroundImage} />\r\n//         <div className=\"contentDiv\" id=\"contentDiv\">\r\n//           <h1 className=\"contentDiv__h1\">Look For An Image</h1>\r\n//           <p className=\"contentDiv__firstSubtitle\">Usplash API powered pictures browser.</p>\r\n//           <form onSubmit={handleSubmit} className=\"contentDiv__form\">\r\n//             <button onClick={handleSubmit} title=\"Search for pictures\" type=\"button\" id=\"contentDiv__form__lupeBtn\"  className=\"contentDiv__form__lupeBtn\" ><img className=\"lupeIcon\" alt=\"lupe_icon\" src={lupe} /></button>\r\n//             <input list=\"autocomplite\" autoComplete=\"off\" required onChange={handleChange} id=\"contentDiv__form__input\" className=\"contentDiv__form__input\" type=\"search\" placeholder=\"Search for high-resolution photos\" />\r\n//             <datalist id=\"autocomplite\">\r\n//               {hints.length > 0 ? hints.map(elem => {\r\n//                 return <option onClick={handleSubmit} key={elem} value={elem}>{elem}</option>\r\n//               }) : null}\r\n//             </datalist>\r\n//             <button title=\"Clear form\" type=\"button\" onClick={clearInput} id=\"contentDiv__form__clearBtn\" className=\"contentDiv__form__clearBtn\"><img className=\"crossIcon\" alt=\"cross_icon\" src={cross} /></button>\r\n//           </form>\r\n//           <p className=\"contentDiv__trending\">There are available only 50 API requests per hour so this can expire quickly.</p>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}