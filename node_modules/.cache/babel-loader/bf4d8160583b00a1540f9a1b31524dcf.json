{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MateBook\\\\Desktop\\\\look-for-image\\\\src\\\\firstPage.js\";\nimport backgroundImage from \"./icons/john-towner-JgOeRuGD_Y4-unsplash.jpg\";\nimport lupe from './icons/loupe.png';\nimport cross from \"./icons/letter-x.png\";\nimport React from \"react\"; // const subscriptionKey = '6e79fffeadc34859b3ac41065bfda7dc';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tomTomApiKey = \"MmTYW8cbCvlP0Ldmo9cUDGwEyyqEUq0G\";\nexport default class FirstPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      descriptions: [],\n      hints: []\n    };\n    this.fetchAPI = this.fetchAPI.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearInput = this.clearInput.bind(this);\n  }\n\n  fetchAPI(page) {\n    // Najpierw zrobiłem autouzupełnianie z API microsoftu, dawał bardziej trafione podpowiedzi, \n    // ale limit 1000 req/msc nie starczył nawet na dokończenie konfiguracji\n    // fetch(\"https://api.bing.microsoft.com/\"\n    // + \"v7.0/Suggestions?\"\n    // + \"&mkt=en-US\"\n    // + \"&setLang=en-US\"\n    // + \"&q=\" + this.props.mainInput, {\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key' : subscriptionKey,\n    //   }\n    // })\n    // .then(response => response.json())\n    // .then((data, fetchedDesriptions) => fetchedDesriptions = data.suggestionGroups[0].searchSuggestions.map(elem => elem.displayText))\n    // .then((data) => this.setState({hints: data}))\n    // .catch(err => console.log(err))\n    // tom tom ma 2500 req/dzień, ale słabe podpowiedzi\n    fetch(\"https://api.tomtom.com/search/\" + \"2\" + \"/autocomplete/\" + this.props.mainInput + \".\" + \"json\" + \"?key=\" + tomTomApiKey + \"&language=en-GB\" + \"&limit=10\").then(res => res.json()).then((data, fetchedDesriptions) => fetchedDesriptions = data.results.map(elem => elem.segments[0].value.toLowerCase())).then((data, setData) => setData = [...new Set(data)]).then(data => this.setState({\n      hints: data ? data : \"No hints for chosen query\"\n    })).catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    const inp = document.getElementById(\"contentDiv__form__input\");\n    let eventSource = null;\n    let value = '';\n    inp.addEventListener('keydown', e => {\n      eventSource = e.key ? 'input' : 'list';\n    });\n    inp.addEventListener('input', e => {\n      value = e.target.value;\n\n      if (eventSource === 'list') {\n        this.props.setMainInput(value);\n        this.props.changePage();\n      }\n    });\n  }\n\n  async handleChange(event) {\n    await this.props.setMainInput(event.target.value.toLowerCase());\n\n    if (event.target.value.length > 2) {\n      this.fetchAPI();\n      console.log(this.state.hints.length);\n    } else {\n      this.setState({\n        hints: []\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.changePage();\n  }\n\n  clearInput() {\n    const inp = document.querySelector(\".contentDiv__form__input\");\n\n    if (inp.value === \"\") {\n      return;\n    }\n\n    this.props.setMainInput(\"\");\n    inp.value = \"\";\n    this.setState({\n      hints: []\n    });\n    console.log(this.state.hints);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"firstPageMainDiv\",\n      id: \"firstPageMainDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"backGroundImg\",\n        alt: \"landscape\",\n        src: backgroundImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentDiv\",\n        id: \"contentDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"contentDiv__h1\",\n          children: \"Look For An Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"contentDiv__firstSubtitle\",\n          children: \"Usplash API powered pictures browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"contentDiv__form\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleSubmit,\n            title: \"Search for pictures\",\n            type: \"button\",\n            id: \"contentDiv__form__lupeBtn\",\n            className: \"contentDiv__form__lupeBtn\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"lupeIcon\",\n              alt: \"lupe_icon\",\n              src: lupe\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 162\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"autocomplite\",\n            autoComplete: \"off\",\n            required: true,\n            onChange: this.handleChange,\n            id: \"contentDiv__form__input\",\n            className: \"contentDiv__form__input\",\n            type: \"search\",\n            placeholder: \"Search for high-resolution photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            onClick: this.handleSubmit,\n            id: \"autocomplite\",\n            children: this.state.hints.length > 0 ? this.state.hints.map(elem => {\n              return elem !== this.props.mainInput ? /*#__PURE__*/_jsxDEV(\"option\", {\n                value: elem,\n                children: elem\n              }, elem, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 56\n              }, this) : null;\n            }) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Clear form\",\n            type: \"button\",\n            onClick: this.clearInput,\n            id: \"contentDiv__form__clearBtn\",\n            className: \"contentDiv__form__clearBtn\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"crossIcon\",\n              alt: \"cross_icon\",\n              src: cross\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 151\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"contentDiv__trending\",\n          children: \"There are available only 50 API requests per hour so this can expire quickly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MateBook/Desktop/look-for-image/src/firstPage.js"],"names":["backgroundImage","lupe","cross","React","tomTomApiKey","FirstPage","Component","constructor","props","state","descriptions","hints","fetchAPI","bind","handleChange","handleSubmit","clearInput","page","fetch","mainInput","then","res","json","data","fetchedDesriptions","results","map","elem","segments","value","toLowerCase","setData","Set","setState","catch","err","console","log","componentDidMount","inp","document","getElementById","eventSource","addEventListener","e","key","target","setMainInput","changePage","event","length","preventDefault","querySelector","render"],"mappings":"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","sourcesContent":["import backgroundImage from \"./icons/john-towner-JgOeRuGD_Y4-unsplash.jpg\";\r\nimport lupe from './icons/loupe.png';\r\nimport cross from \"./icons/letter-x.png\";\r\nimport React from \"react\";\r\n\r\n\r\n// const subscriptionKey = '6e79fffeadc34859b3ac41065bfda7dc';\r\nconst tomTomApiKey = \"MmTYW8cbCvlP0Ldmo9cUDGwEyyqEUq0G\"\r\n\r\nexport default class FirstPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      descriptions: [],\r\n      hints: []\r\n    }\r\n    this.fetchAPI = this.fetchAPI.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.clearInput = this.clearInput.bind(this);\r\n\r\n  }\r\n  fetchAPI(page){\r\n\r\n    // Najpierw zrobiłem autouzupełnianie z API microsoftu, dawał bardziej trafione podpowiedzi, \r\n    // ale limit 1000 req/msc nie starczył nawet na dokończenie konfiguracji\r\n    // fetch(\"https://api.bing.microsoft.com/\"\r\n    // + \"v7.0/Suggestions?\"\r\n    // + \"&mkt=en-US\"\r\n    // + \"&setLang=en-US\"\r\n    // + \"&q=\" + this.props.mainInput, {\r\n    //   headers: {\r\n    //     'Ocp-Apim-Subscription-Key' : subscriptionKey,\r\n    //   }\r\n    // })\r\n    // .then(response => response.json())\r\n    // .then((data, fetchedDesriptions) => fetchedDesriptions = data.suggestionGroups[0].searchSuggestions.map(elem => elem.displayText))\r\n    // .then((data) => this.setState({hints: data}))\r\n    // .catch(err => console.log(err))\r\n\r\n    // tom tom ma 2500 req/dzień, ale słabe podpowiedzi\r\n    fetch(\"https://api.tomtom.com/search/\"\r\n    + \"2\"\r\n    + \"/autocomplete/\"\r\n    + this.props.mainInput\r\n    + \".\"\r\n    + \"json\"\r\n    + \"?key=\" + tomTomApiKey\r\n    + \"&language=en-GB\"\r\n    + \"&limit=10\")\r\n    .then(res => res.json())\r\n    .then((data, fetchedDesriptions) => fetchedDesriptions = data.results.map(elem => elem.segments[0].value.toLowerCase()))\r\n    .then((data, setData) => setData = [...new Set(data)])\r\n    .then((data) => this.setState({hints: data ? data : \"No hints for chosen query\"}))\r\n    .catch(err => console.log(err))\r\n  }\r\n  componentDidMount(){\r\n    const inp = document.getElementById(\"contentDiv__form__input\")\r\n    let eventSource = null;\r\n    let value = '';\r\n\r\n    inp.addEventListener('keydown', (e) => {\r\n      eventSource = e.key ? 'input' : 'list';\r\n    });\r\n    inp.addEventListener('input', (e) => {\r\n      value = e.target.value;\r\n      if (eventSource === 'list') {\r\n        this.props.setMainInput(value)\r\n        this.props.changePage();\r\n      }\r\n    });\r\n  }\r\n  async handleChange(event){\r\n    await this.props.setMainInput(event.target.value.toLowerCase())\r\n\r\n    if(event.target.value.length > 2){\r\n      this.fetchAPI()\r\n      console.log(this.state.hints.length)\r\n    } else {\r\n      this.setState({hints: []})\r\n    }\r\n\r\n  }\r\n  handleSubmit(event){\r\n    event.preventDefault()\r\n    this.props.changePage()\r\n  }\r\n  clearInput(){ \r\n    const inp = document.querySelector(\".contentDiv__form__input\")\r\n    if(inp.value === \"\"){\r\n      return;\r\n    }\r\n    this.props.setMainInput(\"\")\r\n    inp.value = \"\"\r\n    this.setState({hints: []})\r\n    console.log(this.state.hints)\r\n  }\r\n  render(){\r\n  return(\r\n      <div className=\"firstPageMainDiv\" id=\"firstPageMainDiv\">\r\n        <img className=\"backGroundImg\" alt=\"landscape\" src={backgroundImage} />\r\n        <div className=\"contentDiv\" id=\"contentDiv\">\r\n          <h1 className=\"contentDiv__h1\">Look For An Image</h1>\r\n          <p className=\"contentDiv__firstSubtitle\">Usplash API powered pictures browser.</p>\r\n          <form onSubmit={this.handleSubmit} className=\"contentDiv__form\">\r\n            <button onClick={this.handleSubmit} title=\"Search for pictures\" type=\"button\" id=\"contentDiv__form__lupeBtn\"  className=\"contentDiv__form__lupeBtn\" ><img className=\"lupeIcon\" alt=\"lupe_icon\" src={lupe} /></button>\r\n            <input list=\"autocomplite\" autoComplete=\"off\" required onChange={this.handleChange} id=\"contentDiv__form__input\" className=\"contentDiv__form__input\" type=\"search\" placeholder=\"Search for high-resolution photos\" />\r\n            <datalist onClick={this.handleSubmit} id=\"autocomplite\">\r\n              {this.state.hints.length > 0 ? this.state.hints.map(elem => {\r\n                return elem !== this.props.mainInput ? <option key={elem} value={elem}>{elem}</option> : null\r\n              }) : null}\r\n            </datalist>\r\n            <button title=\"Clear form\" type=\"button\" onClick={this.clearInput} id=\"contentDiv__form__clearBtn\" className=\"contentDiv__form__clearBtn\"><img className=\"crossIcon\" alt=\"cross_icon\" src={cross} /></button>\r\n          </form>\r\n          <p className=\"contentDiv__trending\">There are available only 50 API requests per hour so this can expire quickly.</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}